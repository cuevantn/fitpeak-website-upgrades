// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "product",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "additional_images", type: "multiple" },
      {
        name: "google_category",
        type: "string",
        notNull: true,
        defaultValue: "Sporting Goods > Exercise & Fitness > Exercise Bands",
      },
      { name: "image", type: "string" },
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "sale_price", type: "float" },
      { name: "price", type: "float", notNull: true, defaultValue: "9.9" },
      { name: "stock", type: "float", notNull: true, defaultValue: "100" },
    ],
  },
  {
    name: "bag",
    columns: [
      { name: "product", type: "link", link: { table: "product" } },
      { name: "quantity", type: "int", notNull: true, defaultValue: "1" },
      { name: "added_at", type: "datetime" },
      { name: "customer", type: "link", link: { table: "customer" } },
    ],
  },
  {
    name: "customer",
    columns: [
      { name: "first_name", type: "string", notNull: true, defaultValue: "" },
      { name: "last_name", type: "string", notNull: true, defaultValue: "" },
      { name: "phone_number", type: "int", notNull: true, defaultValue: "0" },
      {
        name: "email",
        type: "email",
        notNull: true,
        defaultValue: "mail@mail.mail",
      },
      { name: "DNI", type: "int", notNull: true, defaultValue: "0" },
      { name: "pronouns", type: "string" },
      { name: "user", type: "string", unique: true },
      { name: "image", type: "string" },
      { name: "phone_prefix", type: "int", notNull: true, defaultValue: "51" },
      {
        name: "preferred_address",
        type: "link",
        link: { table: "address" },
        unique: true,
      },
    ],
  },
  {
    name: "address",
    columns: [
      {
        name: "departamento",
        type: "string",
        notNull: true,
        defaultValue: "Callao",
      },
      { name: "provincia", type: "string", notNull: true, defaultValue: "" },
      { name: "distrito", type: "string", notNull: true, defaultValue: "" },
      { name: "direccion", type: "string", notNull: true, defaultValue: "" },
      { name: "referencias", type: "string", notNull: true, defaultValue: "" },
      { name: "customer", type: "link", link: { table: "customer" } },
      {
        name: "shipping_price",
        type: "float",
        notNull: true,
        defaultValue: "15",
      },
    ],
  },
  {
    name: "order",
    columns: [
      { name: "customer", type: "link", link: { table: "customer" } },
      {
        name: "products_price",
        type: "float",
        notNull: true,
        defaultValue: "10.5",
      },
      { name: "shipping_price", type: "float", defaultValue: "14.9" },
      {
        name: "created_at",
        type: "datetime",
        notNull: true,
        defaultValue: "2023-03-10T14:54:30.4Z",
      },
      { name: "discounts", type: "float" },
      { name: "shipping_address", type: "link", link: { table: "address" } },
      { name: "paid_at", type: "datetime" },
      { name: "shipped_at", type: "datetime" },
      { name: "received_at", type: "datetime" },
    ],
  },
  {
    name: "order_product",
    columns: [
      { name: "order", type: "link", link: { table: "order" } },
      { name: "product", type: "link", link: { table: "product" } },
      { name: "unit_price", type: "float", notNull: true, defaultValue: "0" },
      { name: "quantity", type: "float", notNull: true, defaultValue: "0" },
      { name: "unit_sale_price", type: "float" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Product = InferredTypes["product"];
export type ProductRecord = Product & XataRecord;

export type Bag = InferredTypes["bag"];
export type BagRecord = Bag & XataRecord;

export type Customer = InferredTypes["customer"];
export type CustomerRecord = Customer & XataRecord;

export type Address = InferredTypes["address"];
export type AddressRecord = Address & XataRecord;

export type Order = InferredTypes["order"];
export type OrderRecord = Order & XataRecord;

export type OrderProduct = InferredTypes["order_product"];
export type OrderProductRecord = OrderProduct & XataRecord;

export type DatabaseSchema = {
  product: ProductRecord;
  bag: BagRecord;
  customer: CustomerRecord;
  address: AddressRecord;
  order: OrderRecord;
  order_product: OrderProductRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://fitpeak-4hlshe.us-east-1.xata.sh/db/shop",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
